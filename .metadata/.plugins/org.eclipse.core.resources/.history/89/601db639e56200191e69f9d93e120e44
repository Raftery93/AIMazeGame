package ie.gmit.sw.ai;

import net.sourceforge.jFuzzyLogic.*;
import net.sourceforge.jFuzzyLogic.rule.Variable;

public class FuzzyFight {
	
	public FuzzyFight() {
		
	}
	
	 public boolean startBattle(ControlledSprite player, Spider enemy, String fclFilePath){

	        FIS fis = FIS.load(fclFilePath, true);

	        if(fis == null){
	            System.err.println("Error loading: '" + fclFilePath + "'");
	            return true;
	        }

	        FunctionBlock functionBlock = fis.getFunctionBlock("fight");

	        fis.setVariable("health", player.getHealth());
	        fis.setVariable("armor", player.getArmor());
	        fis.setVariable("weapon", player.getWeaponStrength());
	        fis.evaluate();

	        Variable annihilation = functionBlock.getVariable("annihilation");
	        System.out.println("Annihilation Percentage: " + (int)annihilation.getValue() + "%\n");

	        boolean enemyWon = false;

	        player.setHealth((int)(player.getHealth() - (100 - annihilation.getValue())));
	        player.setArmor((int)(player.getArmor() - (100 - annihilation.getValue() + 10)));
	        player.setWeaponStrength((int)(player.getWeaponStrength() * (annihilation.getValue() / 100)));

	        Weapon w = new Weapon("Unarmed", 0);
	        
	        // If the weapon was damaged enough then destroy the weapon
	        if(player.getWeaponStrength() < 35){
	            player.setWeaponStrength(0);
	            player.setWeapon(w);
	        }

	        // Checking armor
	        if(player.getArmor() <= 0){
	            player.setArmor(0);
	        }

	        // Checking health below zero, if true then the game is over
	        if(player.getHealth() <= 0){
	            player.setHealth(0);
	            player.setGameOver(true);
	            System.out.println("Game Over!");
	            System.out.println("Player Score: " + player.getScore() + "\n");
	            enemyWon = true;
	        }

	        // If the player wins the fight then update the player object variables
	        if(!enemyWon){
	            player.setScore(player.getScore() + 25);
	            System.out.println("Player Health: " + player.getHealth());
	            System.out.println("Player Armor: " + player.getArmor() + "\n");
	        }

	        return enemyWon;
	    }

}
