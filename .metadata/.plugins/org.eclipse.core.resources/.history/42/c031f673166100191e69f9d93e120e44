FUNCTION_BLOCK fight	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	health : REAL;
	weapon : REAL;
	armor : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	annihilation : REAL;
END_VAR

FUZZIFY health
	TERM poor := (0, 1) (25, 0);
	TERM good := (30, 0) (45,1) (60,1) (75,0);
	TERM excellent := (75, 0) (90, 1);
END_FUZZIFY

FUZZIFY weapon
	TERM damaged := (0, 1) (25, 0);
	TERM sharp := (30, 0) (45,1) (60,1) (75,0);
	TERM deadly
	 := (75, 0) (90, 1);
END_FUZZIFY

FUZZIFY armor
	TERM poor := (0, 1) (25, 0);
	TERM good := (30, 0) (45,1) (60,1) (75,0);
	TERM excellent := (75, 0) (90, 1);
END_FUZZIFY

DEFUZZIFY annihilation			// Output variable 'survivability' : {'bad', 'fine', 'great' }
	TERM bad := (0,0) (35,1) (40,0);
	TERM fine := (30,0) (50,1) (65,1) (70,0);
	TERM great := (60,0) (75,1) (90,1) (100,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF health IS poor AND armor IS poor THEN annihilation IS bad;
	RULE 2 : IF health IS excellent AND armor IS excellent THEN annihilation IS great;
	RULE 3 : IF weapon IS sharp OR armor IS good THEN annihilation IS fine;
	RULE 4 : IF health IS good OR armor IS good AND weapon IS deadly THEN annihilation IS great;
	RULE 5 : IF weapon IS damaged AND health IS good OR armor IS good THEN annihilation IS bad;
END_RULEBLOCK

END_FUNCTION_BLOCK
